name: Deploy to production

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Allows reading the repo

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::058264480744:role/github-ci-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_URL=${{secrets.POSTGRES_URL}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
          echo "SERVER_ADDRESS=${{secrets.SERVER_ADDRESS}}" >> .env
          echo "DB_DRIVER=${{secrets.DB_DRIVER}}" >> .env
          echo "SYMMETRIC_KEY=${{secrets.SYMMETRIC_KEY}}" >> .env
          echo "ACCESS_TOKEN_DURATION=${{secrets.ACCESS_TOKEN_DURATION}}" >> .env
          echo "REFRESH_TOKEN_DURATION=${{secrets.REFRESH_TOKEN_DURATION}}" >> .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simple-bank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG