name: ci-test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20
        id: go
      
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_URL=${{secrets.POSTGRES_URL}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
          echo "SERVER_ADDRESS=${{secrets.SERVER_ADDRESS}}" >> .env
          echo "DB_DRIVER=${{secrets.DB_DRIVER}}" >> .env
      
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate
        
      - name: Run migration
        run: make migrateup

      - name: Run tests
        run: make test
      
      - name: Run server
        run: make server